version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: chef-numbers-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: {{CONFIG:mysql.password}}
      MYSQL_DATABASE: {{CONFIG:mysql.database}}
      MYSQL_USER: {{CONFIG:mysql.username}}
      MYSQL_PASSWORD: {{CONFIG:mysql.password}}
    ports:
      - "{{CONFIG:mysql.port}}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql-init:/docker-entrypoint-initdb.d
    command: >
      sh -c "
        echo 'MySQL Container gestartet...' &&
        echo 'Lade Init-Script von der App...' &&
        curl -o /docker-entrypoint-initdb.d/init-chef-numbers-mysql.sql {{FUNCTION:getFrontendUrl}}/init-scripts/init-chef-numbers-mysql.sql &&
        echo 'Init-Script geladen. Starte MySQL Server mit Standard-Entrypoint...' &&
        /usr/local/bin/docker-entrypoint.sh mysqld
      "
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p{{CONFIG:mysql.password}}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  prisma-api:
    image: node:18-alpine
    container_name: chef-numbers-prisma-api-mysql
    restart: unless-stopped
    working_dir: /app
    environment:
      DATABASE_URL: mysql://{{CONFIG:mysql.username}}:{{CONFIG:mysql.password}}@mysql:3306/{{CONFIG:mysql.database}}
      NODE_ENV: production
    ports:
      - "{{CONFIG:prisma.port}}:3001"
    command: >
      sh -c "
        echo 'Prisma API Container gestartet...' &&
        apk add --no-cache curl openssl &&
        echo 'Lade Prisma API Dateien herunter...' &&
        curl -o package.json {{FUNCTION:getFrontendUrl}}/prisma-api/package.json &&
        curl -o schema.prisma {{FUNCTION:getFrontendUrl}}/prisma-api/schema.prisma &&
        curl -o server.js {{FUNCTION:getFrontendUrl}}/prisma-api/server.js &&
        echo 'Installiere Prisma API Dependencies...' &&
        npm install &&
        echo 'Generiere Prisma Client...'im &&
        npx prisma generate &&
        echo 'FÃ¼hre Datenbank-Migrationen aus...' &&
        npx prisma db push &&
        echo 'Starte Prisma API Server...' &&
        npm start
      "
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s

volumes:
  mysql_data:
    driver: local
  mysql-init:
    driver: local
